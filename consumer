const amqp = require('amqplib');

/**
 * Consume messages from a RabbitMQ queue asynchronously.
 * 
 * @param {string} connectionUrl - The URL of the RabbitMQ server.
 * @param {string} queueName - The name of the queue to consume messages from.
 */
async function consumeFromQueue(connectionUrl, queueName) {
  let connection, channel;
  try {
    // Connect to the RabbitMQ server
    connection = await amqp.connect(connectionUrl);

    // Create a channel
    channel = await connection.createChannel();

    // Add error event listeners to the connection and channel objects
    connection.on('error', (error) => {
      console.error('An error occurred with the connection:', error);
    });
    channel.on('error', (error) => {
      console.error('An error occurred with the channel:', error);
    });

    // Check if the queue exists
    const queueExists = await channel.checkQueue(queueName);
    if (!queueExists) {
      console.log('Queue does not exist');
      return;
    }

    console.log('Waiting for messages in queue...');

    // Consume messages from the queue
    channel.consume(queueName, (msg) => {
      if (msg && msg.content) {
        // Process the received message
        console.log(`Received: ${msg.content.toString()}`);

        // Manually acknowledge the message after successful processing
        channel.ack(msg);
      }
    }, { noAck: false });
  } catch (error) {
    console.error('An error occurred while consuming messages from the queue:', error);
  } finally {
    if (channel && connection) {
      channel.close();
      connection.close();
    }
  }
}

module.exports = {
  consumeFromQueue,
};
