<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Role Based Access Control Tutorial</title>
  <link rel="stylesheet" href="/path/to/your/custom.css">
  <!-- Add other CSS files if needed -->
  <style>
    /* Your CSS styles here (if any) */
    body {
      font-family: Arial, sans-serif;
      line-height: 1.6;
    }
    h1 {
      text-align: center;
      margin-top: 20px;
    }
    .tutorial-info {
      width: 80%;
      margin: 30px auto;
    }
    ol.tutorial-info li {
      margin-bottom: 10px;
    }
  </style>
</head>

<body>
  <!-- Include the header -->
  <%- include('./layouts/header') %>

  <h1 class="title">Role Based Access Control</h1>
  <div class="tutorial-info">
    <ol class="tutorial-info">
      <li><b>Express JS</b> - Node.js web application framework</li>
      <li><b>EJS</b> - Templating engine for dynamic HTML rendering</li>
      <li>
        <b>Styling â€”</b> Custom CSS (you can use any like Bootstrap, Bulma,
        Tailwind, etc...)
      </li>
      <li><b>PassportJS</b> - Local authentication (email, password)</li>
      <li><b>Roles</b> - Defined roles (admin, moderator, client)</li>
      <li><b>Authorization</b> - Role-based access control for routes</li>
      <li><b>Mongoose</b> - Object-Document Mapping (ODM) for MongoDB</li>
      <li><b>Express Sessions</b> - Session management in Express</li>
      <li>
        Using sessions to <b>persist login</b> after server reboot (using Mongo
        Store)
      </li>
      <li><b>Redirect</b> to the same page after login</li>
      <li><b>Validating</b> user input server-side</li>
      <li><b>Flash messages</b> - Displaying messages to users</li>
      <li>Handling <b>HTTP errors</b> (ex: 404, etc)</li>
      <li>Sometimes going the extra mile ðŸ˜Š</li>
    </ol>
  </div>

  <!-- Include the footer -->
  <%- include('./layouts/footer') %>
</body>

</html>
